mixin duration(start, end)
  - var mStart = moment(start)
  - var mEnd = moment(end)
  - var mDuration = moment.duration(mEnd.diff(mStart))

  if mDuration.asYears() >= 2
    if mDuration.months() < 2 || mDuration.months() > 10
      | #{mDuration.years()} years
    else
      | #{mDuration.years()} years, #{mDuration.months()} months
  else if Math.round(mDuration.asMonths()) > 1
    | #{Math.round(mDuration.asMonths())} months
  else
    | #{mDuration.humanize()}

mixin gig(details, short)
  .company= details.company
  if details.position
    .position= details.position
  if details.positions
    each position in details.positions
      .position= position
  if details.startDate
    .time
      if short
        +duration(details.startDate, details.endDate)
      else
        =details.startDate.split('-')[0]
        | &hairsp;&ndash;&hairsp;
        if details.endDate
          =details.endDate.split('-')[0]
        else
          | Present
  if details.summary
    p= details.summary
  if details.highlights
    ul.highlights
      each item in details.highlights
        li= item

doctype html
head
  meta(charset="UTF-8")
  style
    include:sass /style.sass
body
  .logo
    include /td-logo.svg

  header.category
    h1.name= basics.name
    .email= basics.email

  section.category
    - var employment = work.filter(job => {
    -   return (job.keywords || []).indexOf('personal') === -1
    - })

    h2 Employment History

    each job in employment
      section.work
        +gig(job)

        if job.projects
          section.projects
            h3 Featured Projects &amp; Roles

            each project in job.projects
              section.project
                +gig(project, true)

  section.category
    - var projects = work.filter(job => {
    -   return (job.keywords || []).indexOf('personal') !== -1
    - })

    h2 Personal Projects

    each job in projects
      section.project
        +gig(job)

  section.category
    - var skillsObj = skills.reduce((obj, skill) => {
    -   obj[skill.level] = (obj[skill.level] || []).concat(skill.name);
    -   return obj
    - }, {})

    h2 Skills

    table
      each skill, level in skillsObj
        tr.skill-level
          th= level
          td= skill.join(', ')

  section.category
    h2 Education

    each level in education
      p.degree
        span.field #{level.studyType} in #{level.area},
        | &nbsp;
        span.school #{level.institution}
        | &nbsp;
        span.time #{level.startDate.split('-')[0]}&hairsp;&ndash;&hairsp;#{level.endDate.split('-')[0]}
